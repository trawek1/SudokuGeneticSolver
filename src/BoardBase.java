import org.tinylog.Logger;

public class BoardBase {
    public static final int RETURN_ERROR = -999999;
    public static final int EMPTY_FIELD = 0;
    public static final int SUDOKU_SIZE_MIN = 2;
    public static final int SUDOKU_SIZE_MAX = 5;
    public static final int SUDOKU_SIZE_DEFAULT = 3;

    public static final int[] BOARD_TEST_DATA_2x2 = {
            0, -2, -4, 0,
            -1, 0, 0, -3,
            -4, 0, 0, -2,
            0, -1, -3, 0
    };
    public static final int[] BOARD_TEST_DATA_3x3 = {
            -9, 0, -6, 0, 0, -8, 0, 0, 0,
            0, 0, 0, 0, 0, -1, 0, -9, 0,
            -2, 0, 0, -9, -6, 0, -7, 0, 0,
            0, 0, 0, -1, 0, 0, 0, 0, 0,
            0, 0, -4, -2, -9, 0, 0, -5, 0,
            0, -5, 0, 0, 0, 0, -8, 0, 0,
            0, 0, 0, 0, 0, -6, 0, 0, 0,
            -7, 0, 0, 0, 0, 0, 0, 0, -3,
            0, 0, -2, -5, -4, 0, 0, -8, 0
    };
    public static final int[] BOARD_TEST_DATA_4x4 = {
            0, 0, -8, 0, 0, 0, -2, -16, 0, -14, 0, -11, -7, -10, 0, -4,
            0, -15, 0, 0, 0, 0, -8, 0, -13, 0, 0, -9, 0, 0, -16, -14,
            -14, 0, 0, -16, 0, 0, -11, -12, -8, -6, -2, -10, -13, -5, 0, -1,
            0, 0, -11, 0, 0, 0, 0, 0, -16, -7, -15, 0, 0, 0, 0, 0,
            -6, 0, -15, 0, 0, 0, -14, -7, 0, 0, -4, 0, 0, 0, -10, -13,
            0, -2, 0, 0, -1, 0, -15, -13, -3, 0, 0, -16, -5, -11, 0, 0,
            -5, 0, -3, 0, 0, 0, 0, 0, -15, -8, -6, 0, 0, 0, -14, 0,
            0, 0, -16, -7, -3, 0, -5, 0, 0, 0, -10, -2, -4, 0, 0, 0,
            0, -6, 0, -3, -14, -9, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0,
            -10, -8, -4, 0, 0, -1, 0, -2, 0, 0, 0, -12, -15, 0, 0, -16,
            -9, -1, -5, 0, 0, 0, 0, -10, 0, 0, 0, -7, 0, -3, -13, -12,
            -16, 0, -12, 0, 0, 0, -6, -11, 0, -1, 0, -13, -9, -2, -8, -10,
            0, -3, 0, 0, 0, -2, -1, -4, 0, -15, 0, 0, 0, 0, -11, -5,
            -11, 0, -13, 0, -6, 0, 0, -5, 0, -4, 0, -3, 0, -8, 0, 0,
            -15, -4, 0, 0, 0, 0, -3, 0, -2, 0, 0, 0, 0, 0, 0, 0,
            0, -14, 0, 0, 0, 0, -10, -15, -7, -5, -9, 0, -12, -13, 0, -3
    };
    public static final int[] BOARD_TEST_DATA_4x4_HARD = {
            0, 0, 0, -14, -15, 0, -1, 0, -12, -9, 0, 0, 0, -6, 0, 0,
            0, 0, -2, 0, -3, 0, -11, 0, 0, 0, 0, 0, 0, 0, 0, -1,
            -3, 0, 0, 0, 0, 0, 0, -13, -6, 0, -10, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, -7, -5, 0, -13,

            -14, 0, -6, 0, 0, 0, -4, 0, 0, 0, 0, 0, 0, 0, -16, 0,
            -13, -10, 0, 0, 0, 0, 0, -5, -9, -16, -6, 0, -15, 0, 0, 0,
            -12, -9, -8, 0, -10, 0, 0, -16, 0, -11, 0, 0, -13, 0, 0, -4,
            0, 0, 0, 0, 0, -1, 0, -3, -15, 0, -7, -10, -14, -12, 0, -6,

            -1, 0, 0, 0, -14, -6, 0, -11, -5, -10, -16, 0, 0, -8, 0, -3,
            0, 0, -14, 0, 0, 0, -16, 0, 0, -13, 0, 0, 0, 0, 0, 0,
            -9, 0, -5, 0, 0, 0, 0, 0, -7, -12, 0, -6, 0, 0, -4, 0,
            0, -4, 0, 0, 0, 0, -5, 0, -3, 0, 0, 0, 0, 0, 0, -11,

            0, 0, 0, -8, -13, 0, 0, 0, 0, 0, -9, -12, -16, -4, 0, -10,
            0, 0, 0, -2, -5, 0, 0, 0, -10, 0, -13, 0, 0, 0, 0, -14,
            -6, -3, -10, 0, -2, -7, 0, 0, 0, 0, -8, 0, -12, 0, -5, 0,
            0, -5, -4, 0, 0, -3, -14, 0, 0, 0, 0, -16, 0, 0, -8, 0
    };
    public static final int[] BOARD_TEST_DATA_4x4_EASY = {
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    };

    public static final int[] BOARD_TEST_DATA_5x5 = {
            0, -2, 0, 0, 0, -3, -14, 0, -8, 0, 0, 0, 0, 0, 0, 0, 0, -13, -4, -24, 0, -7, -1, 0, 0,
            0, -10, -17, 0, 0, 0, -6, -18, 0, 0, -22, -16, 0, -12, 0, 0, 0, 0, -1, 0, 0, 0, -13, -19, 0,
            0, -15, -24, -13, -7, 0, 0, 0, -4, 0, -10, 0, 0, -3, -14, 0, -18, 0, 0, 0, 0, -22, -2, 6, 0,
            0, 0, -1, -21, 0, 0, -15, 0, -22, 0, 0, -19, -13, 0, 0, 0, -8, 0, 0, 0, 0, -16, -18, -20, 0,
            0, -5, 0, 0, -20, -7, -25, -19, 0, 0, 0, -21, -17, -18, -2, -10, -12, -22, -9, -15, -11, 0, 0, 0, 0,
            -11, 0, 0, 0, -22, -8, 0, -24, -7, -1, -5, 0, 0, 0, -13, -16, -17, -25, -23, -2, -4, 0, -6, 0, -19,
            -16, -9, -12, 0, -17, 0, -19, -22, 0, 0, 0, 0, -18, -21, 0, 0, -20, -6, -13, 0, -7, 0, 0, -23, -11,
            0, 0, -6, 0, -21, -9, -16, 0, -3, 0, 0, -22, -20, -19, 0, 0, 0, 0, -15, -8, -25, 0, 0, 0, 0,
            0, 0, -23, -5, 0, -2, 0, 0, -11, -17, -8, 0, 0, 0, -16, -12, -9, 0, 0, -21, 0, -3, -10, 0, 0,
            0, 0, 0, 0, 0, -6, 0, 0, -12, 0, -9, -1, -25, 0, -3, 0, -11, 0, 0, -7, 0, 0, -21, 0, 0,
            0, 0, -9, 0, 0, -23, 0, -5, -17, -4, -16, 0, -11, 0, -22, -18, -2, 0, -21, -13, 0, 0, -7, 0, 0,
            -4, -6, 0, 0, -5, 0, 0, -2, 0, 0, 0, -18, -21, -24, 0, 0, -19, -3, 0, -12, -23, 0, 0, -17, 0,
            0, 0, 0, -12, -11, 0, -7, -3, 0, -24, -17, -20, -15, -13, -19, -1, 0, -5, -8, 0, -6, -9, 0, 0, 0,
            0, -22, 0, 0, -14, -19, 0, -6, -16, 0, 0, -8, -9, -7, 0, 0, 0, -24, 0, 0, -3, 0, 0, -1, -18,
            0, 0, -21, 0, 0, -25, -13, 0, -20, -8, -12, 0, -14, 0, -10, -9, -16, -15, 0, -6, 0, 0, -4, 0, 0,
            0, 0, -25, 0, 0, -24, 0, 0, -18, 0, -4, 0, -3, -10, -5, 0, -1, 0, 0, -14, 0, 0, 0, 0, 0,
            0, 0, -5, -3, 0, -17, 0, 0, -23, -7, -13, 0, 0, 0, -18, -19, -21, 0, 0, -22, 0, -11, -12, 0, 0,
            0, 0, 0, 0, -18, -10, -8, 0, 0, 0, 0, -25, -23, -2, 0, 0, -5, 0, -16, -11, -9, 0, -3, 0, 0,
            -17, -20, 0, 0, -2, 0, -22, -16, -6, 0, 0, -7, -12, 0, 0, 0, 0, -9, -3, 0, -18, 0, -23, -24, -25,
            -6, 0, -4, 0, -16, -1, -11, -12, -25, -3, -19, 0, 0, 0, -21, -17, -23, -8, 0, -18, -2, 0, 0, 0, -14,
            0, 0, 0, 0, -4, -14, -24, -11, -19, -23, -21, -17, -16, -8, 0, 0, 0, -1, -2, -9, -13, 0, 0, -5, 0,
            0, -1, -14, -23, 0, 0, 0, 0, -9, 0, 0, 0, -19, -5, 0, 0, -24, 0, -12, 0, 0, -8, -17, 0, 0,
            0, -16, -11, -8, 0, 0, 0, 0, -1, 0, -6, -4, 0, 0, -23, 0, -15, 0, 0, 0, -14, -12, -9, -10, 0,
            0, -21, -3, 0, 0, 0, -17, 0, 0, 0, 0, -15, 0, -25, -20, 0, 0, -4, -10, 0, 0, 0, -16, -11, 0,
            0, 0, -20, -2, 0, -16, -5, -8, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, -19, -25, 0, 0, 0, -3, 0
    };

    private int sudokuSize;
    private int boardSize;
    private boolean checkPossibilities;

    public BoardBase(int _size) {
        this.recalculateBoard(_size);
        this.checkPossibilities = false;
    }

    public void recalculateBoard(int _newSize) {
        if (!isSudokuSizeInRange(_newSize)) {
            Logger.warn("Rozmiar sudoku jest spoza zakresu! Otrzymano {}, ustawiono {}.",
                    _newSize, SUDOKU_SIZE_DEFAULT);
            _newSize = SUDOKU_SIZE_DEFAULT;
        }
        this.sudokuSize = _newSize;
        this.boardSize = this.sudokuSize * this.sudokuSize;
    }

    private boolean isSudokuSizeInRange(int _size) {
        return _size > 0 && _size <= SUDOKU_SIZE_MAX;
    }

    public boolean isValueInRange(int _value) {
        return _value > 0 && _value <= this.boardSize;
    }

    public boolean isCorrectRowNumber(int _rowNumber) {
        return isValueInRange(_rowNumber);
    }

    public boolean isCorrectColNumber(int _colNumber) {
        return isValueInRange(_colNumber);
    }

    public boolean isCorrectBlockNumber(int _blockNumber) {
        return isValueInRange(_blockNumber);
    }

    public int getSudokuSize() {
        return this.sudokuSize;
    }

    public int getBoardSize() {
        return this.boardSize;
    }

    public int getMaxValue() {
        return this.boardSize;
    }

    protected boolean arePossibilitiesCheckingOn() {
        return this.checkPossibilities;
    }

    protected void setPossibilitiesCheckingOn() {
        this.checkPossibilities = true;
    }

    protected void setPossibilitiesCheckingOff() {
        this.checkPossibilities = false;
    }
}
